name: ci

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v5
        with:
          node-version: 24

      - run: corepack enable

      - name: find pnpm cache path
        id: cache
        run: echo "path=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm lint

  typecheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v5
        with:
          node-version: 24

      - run: corepack enable

      - name: find pnpm cache path
        id: cache
        run: echo "path=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm typecheck

  build:
    needs: [lint, typecheck]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v5
        with:
          node-version: 24

      - run: corepack enable

      - name: find pnpm cache path
        id: cache
        run: echo "path=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm build
        env:
          NODE_ENV: production

      - name: Deploy
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          cname: mini-meili.haglund.dev

  docker:
    needs: [build]
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value={{sha}}
            type=raw,value=latest

      - name: Login to GHCR
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and maybe Push Docker image
        uses: docker/build-push-action@v6
        with:
          build-args: |
            GIT_SHA=${{ github.sha }}
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
